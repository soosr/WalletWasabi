<UserControl xmlns="https://github.com/avaloniaui"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:i="clr-namespace:Avalonia.Xaml.Interactivity;assembly=Avalonia.Xaml.Interactivity"
             xmlns:c="using:WalletWasabi.Fluent.Controls"
             xmlns:conv="using:WalletWasabi.Fluent.Converters"
             xmlns:vm="using:WalletWasabi.Fluent.ViewModels.NavBar"
             xmlns:vmw="using:WalletWasabi.Fluent.ViewModels.Wallets"
             xmlns:behaviors="clr-namespace:WalletWasabi.Fluent.Behaviors"
             x:DataType="vm:NavBarViewModel"
             x:CompileBindings="True"
             mc:Ignorable="d" d:DesignWidth="280" d:DesignHeight="459"
             x:Class="WalletWasabi.Fluent.Views.NavBar.NavBar" UseLayoutRounding="False"
             Name="NavBarUserControl">

  <i:Interaction.Behaviors>
    <behaviors:NavBarSelectedIndicatorParentBehavior />
  </i:Interaction.Behaviors>
  <UserControl.Styles>

    <Style Selector="Separator">
      <Setter Property="Background" Value="{DynamicResource AcrylicTrimForeground}" />
      <Setter Property="HorizontalAlignment" Value="Stretch" />
      <Setter Property="Margin" Value="{DynamicResource MenuFlyoutSeparatorThemePadding}" />
      <Setter Property="Height" Value="{DynamicResource MenuFlyoutSeparatorThemeHeight}" />
    </Style>

    <Style Selector="Button">
      <Setter Property="Width" Value="75" />
      <Setter Property="Height" Value="55" />
      <Setter Property="Margin" Value="4 1" />
      <Setter Property="Padding" Value="0" />
      <Setter Property="Background" Value="Transparent" />
    </Style>

    <Style Selector="Button:disabled /template/ ContentPresenter#PART_ContentPresenter">
      <Setter Property="Background" Value="Transparent" />
    </Style>

    <Style Selector="Button StackPanel">
      <Setter Property="Background" Value="Transparent" />
      <Setter Property="VerticalAlignment" Value="Center" />
      <Setter Property="Spacing" Value="2" />
    </Style>

    <Style Selector="Button StackPanel TextBlock">
      <Setter Property="TextAlignment" Value="Center" />
      <Setter Property="FontSize" Value="{StaticResource FontSizeH9}" />
    </Style>

    <Style Selector="Button StackPanel > PathIcon" x:CompileBindings="False">
      <Setter Property="Width" Value="24" />
      <Setter Property="Height" Value="24" />
      <Setter Property="Background" Value="Transparent" />
      <Setter Property="VerticalAlignment" Value="Center" />
      <Setter Property="HorizontalAlignment" Value="Center" />
      <Setter Property="Data" Value="{Binding IconName, Converter={x:Static conv:NavBarIconConverter.Instance}}" />
    </Style>

    <Style Selector="Button StackPanel LayoutTransformControl">
      <Setter Property="LayoutTransform" Value="scaleY(1)" />
      <Setter Property="Opacity" Value="1" />
      <Setter Property="Transitions">
        <Transitions>
          <TransformOperationsTransition Property="LayoutTransform" Duration="0:0:0.175" />
          <DoubleTransition Property="Opacity" Duration="0:0:0.175" Easing="1,0,1,0" />
        </Transitions>
      </Setter>
    </Style>

    <Style Selector="Button Ellipse">
      <Setter Property="Fill" Value="{DynamicResource AcrylicTrimForeground}" />
      <Setter Property="Width" Value="8" />
      <Setter Property="Height" Value="8" />
      <Setter Property="Margin" Value="3" />
      <Setter Property="VerticalAlignment" Value="Top" />
      <Setter Property="HorizontalAlignment" Value="Right" />
      <Setter Property="Opacity" Value="0" />
      <Setter Property="Transitions">
        <Transitions>
          <BrushTransition Property="Fill" Duration="0:0:2" />
        </Transitions>
      </Setter>
    </Style>

    <Style Selector="Button.selected StackPanel LayoutTransformControl">
      <Setter Property="LayoutTransform" Value="scaleY(0)" />
      <Setter Property="Opacity" Value="0" />
    </Style>

    <Style Selector="Button.selected PathIcon" x:CompileBindings="False">
      <Setter Property="Data" Value="{Binding IconNameFocused, Converter={x:Static conv:NavBarIconConverter.Instance}}" />
    </Style>

    <Style Selector="Button Ellipse:not(.isLoading).isLoggedIn">
      <Setter Property="Opacity" Value="1" />
    </Style>

    <Style Selector="Button Ellipse.isLoading.isLoggedIn">
      <Style.Animations>
        <Animation IterationCount="Infinite" Duration="0:0:1">
          <KeyFrame Cue="50%">
            <Setter Property="Opacity" Value="1" />
          </KeyFrame>
        </Animation>
      </Style.Animations>
    </Style>

    <Style Selector="Button Ellipse.isLoggedIn.isCoinjoining">
      <Setter Property="Fill" Value="{DynamicResource CoinjoinActiveColor}" />
    </Style>

  </UserControl.Styles>

  <DockPanel Margin="0 0 0 5">
    <DockPanel Background="Transparent" DockPanel.Dock="Bottom">
      <ItemsControl Items="{Binding BottomItems}"
                    VerticalAlignment="Stretch">
        <ItemsControl.ItemsPanel>
          <ItemsPanelTemplate>
            <ReversibleStackPanel ReverseOrder="True" />
          </ItemsPanelTemplate>
        </ItemsControl.ItemsPanel>
        <ItemsControl.DataTemplates>
          <DataTemplate DataType="vm:NavBarItemViewModel">
            <Button Cursor="Hand"
                    Classes.selected="{Binding IsSelected}"
                    Command="{Binding OpenCommand}">
              <StackPanel>
                <PathIcon Foreground="{DynamicResource AcrylicTrimForeground}" Classes="new size24" />
                <LayoutTransformControl>
                  <c:FadeOutTextBlock Text="{Binding Title}" />
                </LayoutTransformControl>
              </StackPanel>
            </Button>
          </DataTemplate>
        </ItemsControl.DataTemplates>
      </ItemsControl>
    </DockPanel>
    <Separator DockPanel.Dock="Bottom" />
    <!-- Wallet List -->
    <DockPanel Background="Transparent">
      <ItemsControl Items="{Binding Wallets}"
                    VerticalAlignment="Stretch">
        <ItemsControl.DataTemplates>
          <DataTemplate DataType="vmw:WalletViewModelBase">
            <Button ToolTip.Tip="{Binding Title}"
                    Cursor="Hand"
                    Classes.selected="{Binding IsSelected}"
                    Command="{Binding OpenCommand}">
              <Panel>
                <Ellipse Classes.isLoading="{Binding IsLoading}"
                         Classes.isLoggedIn="{Binding IsLoggedIn}"
                         Classes.isCoinjoining="{Binding IsCoinJoining}" />
                <StackPanel>
                  <PathIcon Foreground="{DynamicResource AcrylicTrimForeground}" Classes="new size24" />
                  <LayoutTransformControl>
                    <c:FadeOutTextBlock Text="{Binding Title}" />
                  </LayoutTransformControl>
                </StackPanel>
              </Panel>
            </Button>
          </DataTemplate>
        </ItemsControl.DataTemplates>
      </ItemsControl>
    </DockPanel>
  </DockPanel>
</UserControl>
